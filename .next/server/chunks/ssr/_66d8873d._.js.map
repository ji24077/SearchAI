{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/jisunghan/searchAI1/SearchAI/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function extractMetadata(text: string) {\n  // 간단한 메타데이터 추출 로직 (실제로는 더 복잡할 수 있음)\n  const metadata: Record<string, any> = {};\n  \n  // 날짜 추출 (YYYY-MM-DD 형식)\n  const dateMatches = text.match(/\\d{4}-\\d{2}-\\d{2}/g);\n  if (dateMatches && dateMatches.length > 0) {\n    metadata.dates = dateMatches;\n  }\n  \n  // 금액 추출\n  const amountMatches = text.match(/\\d+,\\d+원|\\d+원/g);\n  if (amountMatches && amountMatches.length > 0) {\n    metadata.amounts = amountMatches;\n  }\n  \n  return metadata;\n}\n\nexport function generateTags(text: string, summary: string) {\n  // 실제로는 AI를 사용하여 태그를 생성할 수 있음\n  // 여기서는 간단한 예시로 구현\n  const commonWords = ['문서', '계약', '보고서', '이메일', '메모', '회의록'];\n  const tags = [];\n  \n  for (const word of commonWords) {\n    if (text.includes(word) || summary.includes(word)) {\n      tags.push(word);\n    }\n  }\n  \n  return tags;\n} "],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,gBAAgB,IAAY;IAC1C,oCAAoC;IACpC,MAAM,WAAgC,CAAC;IAEvC,wBAAwB;IACxB,MAAM,cAAc,KAAK,KAAK,CAAC;IAC/B,IAAI,eAAe,YAAY,MAAM,GAAG,GAAG;QACzC,SAAS,KAAK,GAAG;IACnB;IAEA,QAAQ;IACR,MAAM,gBAAgB,KAAK,KAAK,CAAC;IACjC,IAAI,iBAAiB,cAAc,MAAM,GAAG,GAAG;QAC7C,SAAS,OAAO,GAAG;IACrB;IAEA,OAAO;AACT;AAEO,SAAS,aAAa,IAAY,EAAE,OAAe;IACxD,6BAA6B;IAC7B,kBAAkB;IAClB,MAAM,cAAc;QAAC;QAAM;QAAM;QAAO;QAAO;QAAM;KAAM;IAC3D,MAAM,OAAO,EAAE;IAEf,KAAK,MAAM,QAAQ,YAAa;QAC9B,IAAI,KAAK,QAAQ,CAAC,SAAS,QAAQ,QAAQ,CAAC,OAAO;YACjD,KAAK,IAAI,CAAC;QACZ;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/jisunghan/searchAI1/SearchAI/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/jisunghan/searchAI1/SearchAI/src/app/search/page.tsx"],"sourcesContent":["import { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\n\nexport default function Search() {\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold mb-6\">문서 검색</h1>\n      <div className=\"flex gap-2 mb-8\">\n        <Input placeholder=\"자연어로 검색어를 입력하세요...\" className=\"flex-1\" />\n        <Button>검색</Button>\n      </div>\n      <div className=\"border rounded-lg p-6 shadow-sm\">\n        <p className=\"text-gray-600\">검색 결과가 여기에 표시됩니다.</p>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;;;;;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,aAAY;wBAAqB,WAAU;;;;;;kCAClD,8OAAC,kIAAA,CAAA,SAAM;kCAAC;;;;;;;;;;;;0BAEV,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;;;;;AAIrC","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}